
// ==============================================================================
// katai5plate / RAAmen
// Version : alpha
// Licence : MIT
// Repository : https://github.com/katai5plate/RAAmen
// ------------------------------------------------------------------------------
// Had2Apps
// WebSite : https://Had2Apps.com
// ==============================================================================
"use strict";/*:
 * @plugindesc RAAmen コアスクリプト
 * @author Had2Apps
 *
 * @help
 * RPGアツマールAPIのモックを作ります。
 * このプラグインに追加で別の専用プラグインを繋げて使います。
 *
 * このプラグイン自体の機能：
 * ・2019/02/07 現在のAPIメソッドの網羅
 * ・APIメソッドを呼び出した際のサーバーエラーをシミュレート
 */(()=>{var _NumberMIN_SAFE_INTEGER=Number.MIN_SAFE_INTEGER,_NumberMAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER;const AtsumaruApiError=function(code,message=""){this.errorType="atsumaruApiError",this.code=code,this.message=message},params={isEnable:!window.RPGAtsumaru,isServerError:!1,interval:5e3,cooldown:6e4,isFrozen:!1,lastRequest:new Date(0),freezingStart:new Date(0),falseCount:0,falseMax:3,severeFalse:!1,responseTime:{normal:1e3,modal:500,client:100}},collections={errors:{BAD_REQUEST:new AtsumaruApiError("BAD_REQUEST",`いずれかの問題：${"\u540C\u3058\u30DD\u30C3\u30D7\u30A2\u30C3\u30D7\u304C\u3059\u3067\u306B\u8868\u793A\u3055\u308C\u3066\u3044\u307E\u3059, \u30B9\u30AF\u30EA\u30FC\u30F3\u30B7\u30E7\u30C3\u30C8\u306E\u64AE\u5F71\u306B\u5931\u6557\u3057\u307E\u3057\u305F, \u6B63\u3057\u3044URL\u304C\u6307\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093, \u30C8\u30EA\u30AC\u30FCID\u304C\u81EA\u7136\u6570\u3067\u306F\u3042\u308A\u307E\u305B\u3093, \u30B0\u30ED\u30FC\u30D0\u30EB\u30B5\u30FC\u30D0\u30FC\u5909\u6570ID\u304C\u81EA\u7136\u6570\u3067\u306F\u3042\u308A\u307E\u305B\u3093, \u30E6\u30FC\u30B6\u30FCID\u30EA\u30B9\u30C8\u304C\u914D\u5217\u3067\u306F\u3042\u308A\u307E\u305B\u3093, \u30E6\u30FC\u30B6\u30FCID\u30EA\u30B9\u30C8\u304C1\uFF5E100\u4EF6\u3067\u306F\u3042\u308A\u307E\u305B\u3093, \u30E6\u30FC\u30B6\u30FCID\u304C\u81EA\u7136\u6570\u3067\u306F\u3042\u308A\u307E\u305B\u3093, \u30B7\u30B0\u30CA\u30EB\u30C7\u30FC\u30BF\u304C\u6587\u5B57\u5217\u578B\u3067\u306F\u3042\u308A\u307E\u305B\u3093"}`),UNAUTHORIZED:new AtsumaruApiError("UNAUTHORIZED",`いずれかの問題：${"\u30ED\u30B0\u30A4\u30F3\u3057\u3066\u3044\u307E\u305B\u3093, \u975E\u30ED\u30B0\u30A4\u30F3\u6642\u306B\u5171\u6709\u30BB\u30FC\u30D6\u3092\u4FDD\u5B58\u3067\u304D\u307E\u305B\u3093"}`),API_CALL_LIMIT_EXCEEDED:new AtsumaruApiError("API_CALL_LIMIT_EXCEEDED","\u3053\u306E\u30A2\u30C4\u30DE\u30FC\u30EBAPI\u3078\u306E\u30A2\u30AF\u30BB\u30B9\u56DE\u6570\u304C\u591A\u3059\u304E\u307E\u3059"),FORBIDDEN:new AtsumaruApiError("FORBIDDEN","\u5BFE\u8C61\u306E\u30E6\u30FC\u30B6\u30FC\u306E\u30D7\u30EC\u30A4\u30E4\u30FC\u9593\u901A\u4FE1\u304C\u6709\u52B9\u5316\u3055\u308C\u3066\u3044\u307E\u305B\u3093"),INTERNAL_SERVER_ERROR:new AtsumaruApiError("INTERNAL_SERVER_ERROR","\u5185\u90E8\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F")},state:{scoreboards:[{boardId:1,boardName:"score board",myRecord:{isNewRecord:!1,rank:1,score:0},ranking:[{rank:1,score:0,userName:""}],myBestRecord:{rank:1,score:0,userName:""}}],screenshot:{handler:new Promise(resolve=>{setTimeout(()=>{resolve("default.png")},params.responseTime.client)})},globalServerVariable:{variables:[{id:123,body:{name:"G-Variable",maxValue:_NumberMAX_SAFE_INTEGER,minValue:_NumberMIN_SAFE_INTEGER,value:123456}}],trigger:{callable:[{id:456,value:100}],specified:[{id:789,delta:{min:-100,max:100}}]}}}},methods={send(){const now=new Date,{interval,cooldown,isFrozen,lastRequest,freezingStart,falseCount,falseMax,severeFalse}=this,error=()=>{const diff=cooldown-(now-freezingStart),left=(0>=diff?cooldown:diff)/1e3,e=collections.errors.API_CALL_LIMIT_EXCEEDED;return console.error(`${e.code}: ${left} sec left`),e};if(!isFrozen&&now-lastRequest<interval){if(falseCount>=falseMax)return this.isFrozen=!0,this.freezingStart=now,{result:!1,error:error()};console.warn(`Too early! : ${falseMax-falseCount} left`),this.falseCount+=1}if(isFrozen){if(now-freezingStart<cooldown)return{result:!1,error:error()};this.isFrozen=!1,this.falseCount=0}return console.info("REQUEST_SUCCEEDED"),this.lastRequest=now,0!==falseCount&&!severeFalse&&now-lastRequest>interval&&(this.falseCount=0),{result:!0,error:null}},request({waitTime=params.responseTime.normal,post={},checkValid=p=>!!p,succeeded={},failed=collections.errors.BAD_REQUEST,client=!1}={}){return new Promise((resolve,reject)=>{setTimeout(()=>{if(!1===client){const{result:statResult,error}=this.send();!1===statResult&&reject(error)}!1===checkValid(post)&&reject(failed),resolve(succeeded)},waitTime)})},clientRequest({post={},checkValid=p=>!!p,succeeded={},failed=collections.errors.BAD_REQUEST}={}){return this.request({waitTime:params.responseTime.client,post,checkValid,succeeded,failed,client:!0})},async modal({message,decorate=s=>s,checkValid=p=>!!p,client=!1}={}){if(!message)throw new Error("message is undefined");const request=client?this.clientRequest({post:message,succeeded:{src:message,deco:decorate(message)},checkValid}):this.request({waitTime:this.responseTime.modal,post:message,succeeded:{src:message,deco:decorate(message)},checkValid});await request.then(r=>{console.info(`MODAL: ${r.src}, DECO: ${r.deco}`),alert(r.deco)})}};if(window.RAA={...params,...methods,...collections},window.RAA.isEnable){const callsLocalCompletionAPI=function(...args){return console.info("an EMPTY non-communication API was CALLED!",args),window.RAA.clientRequest()},callsCommunicationAPI=function(...args){return console.info("an EMPTY communication API was CALLED!",args),window.RAA.request()};window.RPGAtsumaru={comment:{changeScene:callsLocalCompletionAPI,resetAndChangeScene:callsLocalCompletionAPI,pushContextFactor:callsLocalCompletionAPI,pushMinorContext:callsLocalCompletionAPI,setContext:callsLocalCompletionAPI,cameOut:{subscribe:callsLocalCompletionAPI},posted:{subscribe:callsLocalCompletionAPI},verbose:callsLocalCompletionAPI},controllers:{defaultController:{subscribe:callsLocalCompletionAPI}},storage:{getItems:callsLocalCompletionAPI,setItems:callsLocalCompletionAPI,removeItem:callsLocalCompletionAPI},volume:{getCurrentValue:callsLocalCompletionAPI,changed:{subscribe:callsLocalCompletionAPI}},popups:{openLink:callsLocalCompletionAPI},experimental:{query:[],popups:{displayCreatorInformationModal:callsLocalCompletionAPI},scoreboards:{setRecord:callsCommunicationAPI,display:callsLocalCompletionAPI,getRecords:callsCommunicationAPI},screenshot:{displayModal:callsLocalCompletionAPI,setScreenshotHandler:callsLocalCompletionAPI},globalServerVariable:{getGlobalServerVariable:callsCommunicationAPI,triggerCall:callsCommunicationAPI},storage:{getSharedItems:callsCommunicationAPI},user:{getSelfInformation:callsCommunicationAPI,getUserInformation:callsCommunicationAPI,getRecentUsers:callsCommunicationAPI},signal:{sendSignalToGlobal:callsCommunicationAPI,getGlobalSignals:callsCommunicationAPI,sendSignalToUser:callsCommunicationAPI,getUserSignals:callsCommunicationAPI},interplayer:{enable:callsLocalCompletionAPI}}}}})();